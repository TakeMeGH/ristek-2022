using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class LevelGrid
{
    // Start is called before the first frame update
    public List<Node> getLevel1(){
        List<Node> path = new List<Node>();
        path.Add(new Node(0, 2));
        path.Add(new Node(0, 3));
        path.Add(new Node(0, 4));
        path.Add(new Node(0, 5));
        path.Add(new Node(0, 6));
        path.Add(new Node(0, 7));
        path.Add(new Node(0, 8));
        path.Add(new Node(0, 9));
        path.Add(new Node(0, 10));
        path.Add(new Node(1, 2));
        path.Add(new Node(1, 10));
        path.Add(new Node(2, 2));
        path.Add(new Node(2, 10));
        path.Add(new Node(3, 2));
        path.Add(new Node(3, 8));
        path.Add(new Node(3, 9));
        path.Add(new Node(3, 10));
        path.Add(new Node(4, 1));
        path.Add(new Node(4, 2));
        path.Add(new Node(4, 3));
        path.Add(new Node(4, 4));
        path.Add(new Node(4, 8));
        path.Add(new Node(5, 0));
        path.Add(new Node(5, 1));
        path.Add(new Node(5, 2));
        path.Add(new Node(5, 3));
        path.Add(new Node(5, 4));
        path.Add(new Node(5, 8));
        path.Add(new Node(5, 9));
        path.Add(new Node(5, 10));
        path.Add(new Node(5, 11));
        path.Add(new Node(6, 0));
        path.Add(new Node(6, 1));
        path.Add(new Node(6, 11));
        path.Add(new Node(7, 0));
        path.Add(new Node(7, 1));
        path.Add(new Node(7, 3));
        path.Add(new Node(7, 4));
        path.Add(new Node(7, 8));
        path.Add(new Node(7, 9));
        path.Add(new Node(7, 11));
        path.Add(new Node(8, 0));
        path.Add(new Node(8, 1));
        path.Add(new Node(8, 3));
        path.Add(new Node(8, 4));
        path.Add(new Node(8, 8));
        path.Add(new Node(8, 9));
        path.Add(new Node(8, 11));
        path.Add(new Node(9, 0));
        path.Add(new Node(9, 1));
        path.Add(new Node(9, 3));
        path.Add(new Node(9, 4));
        path.Add(new Node(9, 8));
        path.Add(new Node(9, 9));
        path.Add(new Node(9, 11));
        path.Add(new Node(10, 0));
        path.Add(new Node(10, 1));
        path.Add(new Node(10, 3));
        path.Add(new Node(10, 4));
        path.Add(new Node(10, 8));
        path.Add(new Node(10, 9));
        path.Add(new Node(10, 11));
        path.Add(new Node(11, 0));
        path.Add(new Node(11, 1));
        path.Add(new Node(11, 3));
        path.Add(new Node(11, 4));
        path.Add(new Node(11, 8));
        path.Add(new Node(11, 9));
        path.Add(new Node(11, 11));
        path.Add(new Node(12, 0));
        path.Add(new Node(12, 1));
        path.Add(new Node(12, 3));
        path.Add(new Node(12, 4));
        path.Add(new Node(12, 8));
        path.Add(new Node(12, 9));
        path.Add(new Node(12, 11));
        path.Add(new Node(13, 0));
        path.Add(new Node(13, 1));
        path.Add(new Node(13, 11));
        path.Add(new Node(14, 1));
        path.Add(new Node(14, 2));
        path.Add(new Node(14, 3));
        path.Add(new Node(14, 4));
        path.Add(new Node(14, 8));
        path.Add(new Node(14, 9));
        path.Add(new Node(14, 10));
        path.Add(new Node(14, 11));
        path.Add(new Node(15, 1));
        path.Add(new Node(15, 2));
        path.Add(new Node(15, 3));
        path.Add(new Node(15, 8));
        path.Add(new Node(15, 9));
        path.Add(new Node(16, 1));
        path.Add(new Node(16, 2));
        path.Add(new Node(16, 9));
        path.Add(new Node(17, 1));
        path.Add(new Node(17, 2));
        path.Add(new Node(17, 9));
        path.Add(new Node(18, 1));
        path.Add(new Node(18, 2));
        path.Add(new Node(18, 3));
        path.Add(new Node(18, 4));
        path.Add(new Node(18, 5));
        path.Add(new Node(18, 6));
        path.Add(new Node(18, 7));
        path.Add(new Node(18, 8));
        path.Add(new Node(18, 9));
        return path;
    }

    public List<Node> getLevel2(){
        List<Node> path = new List<Node>();
        path.Add(new Node(1, 8));
        path.Add(new Node(1, 9));
        path.Add(new Node(1, 10));
        path.Add(new Node(1, 14));
        path.Add(new Node(1, 15));
        path.Add(new Node(1, 16));
        path.Add(new Node(1, 17));
        path.Add(new Node(2, 8));
        path.Add(new Node(2, 11));
        path.Add(new Node(2, 12));
        path.Add(new Node(2, 13));
        path.Add(new Node(2, 14));
        path.Add(new Node(2, 17));
        path.Add(new Node(3, 7));
        path.Add(new Node(3, 8));
        path.Add(new Node(3, 11));
        path.Add(new Node(3, 12));
        path.Add(new Node(3, 13));
        path.Add(new Node(3, 14));
        path.Add(new Node(3, 17));
        path.Add(new Node(3, 18));
        path.Add(new Node(3, 19));
        path.Add(new Node(4, 4));
        path.Add(new Node(4, 5));
        path.Add(new Node(4, 6));
        path.Add(new Node(4, 7));
        path.Add(new Node(4, 11));
        path.Add(new Node(4, 12));
        path.Add(new Node(4, 13));
        path.Add(new Node(4, 14));
        path.Add(new Node(4, 18));
        path.Add(new Node(4, 19));
        path.Add(new Node(5, 3));
        path.Add(new Node(5, 4));
        path.Add(new Node(5, 18));
        path.Add(new Node(5, 19));
        path.Add(new Node(6, 2));
        path.Add(new Node(6, 3));
        path.Add(new Node(6, 4));
        path.Add(new Node(6, 18));
        path.Add(new Node(6, 19));
        path.Add(new Node(7, 2));
        path.Add(new Node(7, 3));
        path.Add(new Node(7, 18));
        path.Add(new Node(7, 19));
        path.Add(new Node(8, 0));
        path.Add(new Node(8, 3));
        path.Add(new Node(8, 18));
        path.Add(new Node(8, 19));
        path.Add(new Node(9, 0));
        path.Add(new Node(9, 1));
        path.Add(new Node(9, 2));
        path.Add(new Node(9, 3));
        path.Add(new Node(9, 11));
        path.Add(new Node(9, 12));
        path.Add(new Node(9, 13));
        path.Add(new Node(9, 14));
        path.Add(new Node(9, 18));
        path.Add(new Node(9, 19));
        path.Add(new Node(10, 0));
        path.Add(new Node(10, 11));
        path.Add(new Node(10, 12));
        path.Add(new Node(10, 13));
        path.Add(new Node(10, 14));
        path.Add(new Node(10, 17));
        path.Add(new Node(10, 18));
        path.Add(new Node(10, 19));
        path.Add(new Node(11, 0));
        path.Add(new Node(11, 11));
        path.Add(new Node(11, 12));
        path.Add(new Node(11, 13));
        path.Add(new Node(11, 14));
        path.Add(new Node(11, 17));
        path.Add(new Node(11, 18));
        path.Add(new Node(11, 19));
        path.Add(new Node(12, 0));
        path.Add(new Node(12, 8));
        path.Add(new Node(12, 9));
        path.Add(new Node(12, 10));
        path.Add(new Node(12, 11));
        path.Add(new Node(12, 14));
        path.Add(new Node(12, 15));
        path.Add(new Node(12, 16));
        path.Add(new Node(12, 17));
        path.Add(new Node(13, 0));
        path.Add(new Node(13, 8));
        path.Add(new Node(13, 9));
        path.Add(new Node(14, 0));
        path.Add(new Node(14, 8));
        path.Add(new Node(14, 9));
        path.Add(new Node(15, 0));
        path.Add(new Node(15, 1));
        path.Add(new Node(15, 2));
        path.Add(new Node(15, 3));
        path.Add(new Node(15, 4));
        path.Add(new Node(15, 5));
        path.Add(new Node(15, 6));
        path.Add(new Node(15, 7));
        path.Add(new Node(15, 8));
        return path;
    }

    public List<Node> getLevel3(){
        List<Node> path = new List<Node>();
        path.Add(new Node(2, 4));
        path.Add(new Node(2, 5));
        path.Add(new Node(2, 6));
        path.Add(new Node(3, 3));
        path.Add(new Node(3, 4));
        path.Add(new Node(3, 5));
        path.Add(new Node(3, 6));
        path.Add(new Node(3, 7));
        path.Add(new Node(3, 8));
        path.Add(new Node(3, 9));
        path.Add(new Node(4, 2));
        path.Add(new Node(4, 3));
        path.Add(new Node(4, 9));
        path.Add(new Node(4, 10));
        path.Add(new Node(4, 11));
        path.Add(new Node(5, 2));
        path.Add(new Node(5, 11));
        path.Add(new Node(6, 2));
        path.Add(new Node(6, 5));
        path.Add(new Node(6, 6));
        path.Add(new Node(6, 7));
        path.Add(new Node(6, 8));
        path.Add(new Node(6, 11));
        path.Add(new Node(7, 2));
        path.Add(new Node(7, 5));
        path.Add(new Node(7, 8));
        path.Add(new Node(7, 11));
        path.Add(new Node(8, 2));
        path.Add(new Node(8, 5));
        path.Add(new Node(8, 8));
        path.Add(new Node(8, 11));
        path.Add(new Node(9, 2));
        path.Add(new Node(9, 5));
        path.Add(new Node(9, 6));
        path.Add(new Node(9, 7));
        path.Add(new Node(9, 8));
        path.Add(new Node(9, 11));
        path.Add(new Node(10, 2));
        path.Add(new Node(10, 3));
        path.Add(new Node(10, 10));
        path.Add(new Node(10, 11));
        path.Add(new Node(11, 3));
        path.Add(new Node(11, 9));
        path.Add(new Node(12, 3));
        path.Add(new Node(12, 4));
        path.Add(new Node(12, 5));
        path.Add(new Node(12, 8));
        path.Add(new Node(13, 3));
        path.Add(new Node(13, 4));
        path.Add(new Node(13, 5));
        path.Add(new Node(13, 8));
        path.Add(new Node(13, 9));
        path.Add(new Node(14, 2));
        path.Add(new Node(14, 3));
        path.Add(new Node(14, 9));
        path.Add(new Node(14, 10));
        path.Add(new Node(14, 11));
        path.Add(new Node(15, 2));
        path.Add(new Node(15, 11));
        path.Add(new Node(16, 2));
        path.Add(new Node(16, 5));
        path.Add(new Node(16, 6));
        path.Add(new Node(16, 7));
        path.Add(new Node(16, 8));
        path.Add(new Node(16, 11));
        path.Add(new Node(17, 2));
        path.Add(new Node(17, 5));
        path.Add(new Node(17, 6));
        path.Add(new Node(17, 8));
        path.Add(new Node(17, 11));
        path.Add(new Node(18, 2));
        path.Add(new Node(18, 5));
        path.Add(new Node(18, 8));
        path.Add(new Node(18, 11));
        path.Add(new Node(19, 2));
        path.Add(new Node(19, 5));
        path.Add(new Node(19, 6));
        path.Add(new Node(19, 7));
        path.Add(new Node(19, 8));
        path.Add(new Node(19, 11));
        path.Add(new Node(20, 2));
        path.Add(new Node(20, 3));
        path.Add(new Node(20, 10));
        path.Add(new Node(20, 11));
        path.Add(new Node(21, 3));
        path.Add(new Node(21, 9));
        path.Add(new Node(22, 3));
        path.Add(new Node(22, 4));
        path.Add(new Node(22, 5));
        path.Add(new Node(22, 6));
        path.Add(new Node(22, 7));
        path.Add(new Node(22, 8));
        path.Add(new Node(22, 9));

        // path.Add(new Node(10, 9));
        // path.Add(new Node(20, 9));
        return path;
    }
}
